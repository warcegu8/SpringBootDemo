server.port=8081
server.servlet.context-path=/springBootDemo
spring.application.name=springBootDemo

#数据库设置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.jpa.show-sql=true
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据#
spring.datasource.useGlobalDataSourceStat=true

mybatis.configuration.log-impl = org.apache.ibatis.logging.log4j2.Log4j2Impl
logging.level.com.spring.demo.dao.* = debug
#mybatis&&通用Mapper
mybatis.type-aliases-package=com.spring.demo.entity
mybatis.mapper-locations=classpath:mapper/*.xml
#开启二级缓存
mybatis.configuration.cache-enabled=true
#注册MyMapper
mapper.mappers=tk.mybatis.mapper.common.Mapper,com.spring.demo.utils.MyMapper
mapper.identity=MYSQL
mapper.notEmpty=true

